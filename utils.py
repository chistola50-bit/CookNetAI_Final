import os

def generate_caption(title: str, desc: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä–æ—Ç–∫—É—é –ø–æ–¥–ø–∏—Å—å –∫ —Ä–µ—Ü–µ–ø—Ç—É.
    –ï—Å–ª–∏ –µ—Å—Ç—å OPENAI_API_KEY ‚Äî –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å OpenAI (—Å–º. –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∏–∂–µ).
    –ü–æ–∫–∞ ‚Äî –ª—ë–≥–∫–∏–π —à–∞–±–ª–æ–Ω –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
    """
    title = (title or "").strip()
    desc = (desc or "").strip()
    if not title and not desc:
        return "–î–æ–º–∞—à–Ω–µ–µ –±–ª—é–¥–æ, –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å –ª—é–±–æ–≤—å—é üòã"
    # –ü—Ä–æ—Å—Ç–∞—è "—É–º–Ω–∞—è" –ø–æ–¥–ø–∏—Å—å
    base = "–ù–µ–∂–Ω–æ–µ, –∞—Ä–æ–º–∞—Ç–Ω–æ–µ –∏ –≤–∫—É—Å–Ω–æ–µ –±–ª—é–¥–æ"
    if "—Å—É–ø" in title.lower() or "—Å—É–ø" in desc.lower():
        base = "–°–æ–≥—Ä–µ–≤–∞—é—â–∏–π —Å—É–ø —Å –±–æ–≥–∞—Ç—ã–º –≤–∫—É—Å–æ–º"
    elif "–ø–∞—Å—Ç–∞" in title.lower() or "–º–∞–∫–∞—Ä" in desc.lower():
        base = "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫–ª–∞—Å—Å–∏–∫–∞ ‚Äî –ø–∞—Å—Ç–∞ al dente"
    elif "—Ç–æ—Å—Ç" in title.lower() or "–∞–≤–æ–∫–∞–¥–æ" in desc.lower():
        base = "–õ—ë–≥–∫–∏–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π —Ç–æ—Å—Ç –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏"
    return f"{base}. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –¥—Ä—É–∑–µ–π –∏ —Å–µ–º—å–∏!"
    
    # --- –í–∞—Ä–∏–∞–Ω—Ç —Å OpenAI ---
    # import openai
    # api_key = os.getenv("OPENAI_API_KEY")
    # if not api_key:
    #     return base
    # openai.api_key = api_key
    # prompt = f"–°–¥–µ–ª–∞–π –∫–æ—Ä–æ—Ç–∫—É—é, –∞–ø–ø–µ—Ç–∏—Ç–Ω—É—é –ø–æ–¥–ø–∏—Å—å (–¥–æ 12 —Å–ª–æ–≤) –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ '{title}'. –û–ø–∏—Å–∞–Ω–∏–µ: {desc}"
    # try:
    #     resp = openai.Completion.create(
    #         model="gpt-3.5-turbo-instruct",
    #         prompt=prompt,
    #         max_tokens=40
    #     )
    #     return resp.choices[0].text.strip()
    # except Exception:
    #     return base
